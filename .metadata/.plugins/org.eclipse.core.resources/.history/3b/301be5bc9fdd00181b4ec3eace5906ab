/*
 * drv_usart.c
 *
 *  Created on: Nov 1, 2018
 *      Author: mose
 */

#include "drv_usart.h"

void usart_init()
{
  usart_init(USART1, GPIOA, GPIO_Pin_9, GPIO_Pin_10, 115200);
}

void usart_init(u32 baudRate)
{
  GPIO_InitTypeDef GPIO_InitStrue;
  USART_InitTypeDef USART_InitStrue;
  NVIC_InitTypeDef NVIC_InitStrue;
  //复位串口1 -> 可以没有
//  USART_DeInit(USART1);
  // 初始化 串口对应IO口  TX-PA9  RX-PA10
  GPIO_InitStrue.GPIO_Mode = GPIO_Mode_AF_PP;
  GPIO_InitStrue.GPIO_Pin = GPIO_Pin_9;
  GPIO_InitStrue.GPIO_Speed = GPIO_Speed_50MHz;
  GPIO_Init(GPIOA, &GPIO_InitStrue);
  GPIO_InitStrue.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  GPIO_InitStrue.GPIO_Pin = GPIO_Pin_10;
  GPIO_Init(GPIOA, &GPIO_InitStrue);
  // 初始化 串口模式状态
  USART_InitStrue.USART_BaudRate = baudRate; // 波特率
  USART_InitStrue.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // 硬件流控制
  USART_InitStrue.USART_Mode = USART_Mode_Tx|USART_Mode_Rx; // 发送 接收 模式都使用
  USART_InitStrue.USART_Parity = USART_Parity_No; // 没有奇偶校验
  USART_InitStrue.USART_StopBits = USART_StopBits_1; // 一位停止位
  USART_InitStrue.USART_WordLength = USART_WordLength_8b; // 每次发送数据宽度为8位
  USART_Init(USART1, &USART_InitStrue);
  USART_Cmd(USART1, ENABLE);//使能串口
  USART_ITConfig(USART1,USART_IT_RXNE, ENABLE);//开启接收中断
  // 初始化 中断优先级
  NVIC_InitStrue.NVIC_IRQChannel = USART1_IRQn;
  NVIC_InitStrue.NVIC_IRQChannelCmd = ENABLE;
  NVIC_InitStrue.NVIC_IRQChannelPreemptionPriority = 1;
  NVIC_InitStrue.NVIC_IRQChannelSubPriority = 1;
  NVIC_Init(&NVIC_InitStrue);
}
