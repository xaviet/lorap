/*
 * drv_adxl345.c
 *
 *  Created on: Nov 21, 2018
 *      Author: mose
 */

#include "hw_config.h"
#include "drv_adxl345.h"
#include "drv_spi.h"
#include "drv_gpio.h"
#include "drv_usart.h"
#include "tools_lib.h"
#include "string.h"

void init_adxl345()
{
  u8 v = 0;
  usart_send_string("\tadxl345 Ver: 0x");
  v = adxl345_read(0x00);
  usart_send_u8(v);
  usart_send_string("\r\n");
}

void adxl345_write(vu8 addr, u8 data)
{
//  led_set(globalV.ledStat = !globalV.ledStat);
  gpio_set(ADXL345_GPIO, ADXL345_NSS, LOW);
  spiInOut(ADXL345_SPI, addr & 0x3f);
  spiInOut(ADXL345_SPI, data);
  gpio_set(ADXL345_GPIO, ADXL345_NSS, HIGH);
}

u8 adxl345_read(vu8 addr)
{
//  led_set(globalV.ledStat = !globalV.ledStat);

//  SPI_I2S_SendData(SPIx, outData);
//  while(SPI_I2S_GetFlagStatus(SPIx, SPI_I2S_FLAG_RXNE) == RESET);
//  return(SPI_I2S_ReceiveData(SPIx));

  u8 v = 0;
  gpio_set(ADXL345_GPIO, ADXL345_NSS, LOW);
  usart_send_string("1");
  while(SPI_I2S_GetFlagStatus(ADXL345_SPI, SPI_I2S_FLAG_TXE) == RESET);
  usart_send_string("5");
  SPI_I2S_SendData(ADXL345_SPI, (addr & 0x3f) | 0x80);
  usart_send_string("4");
  while(SPI_I2S_GetFlagStatus(ADXL345_SPI, SPI_I2S_FLAG_RXNE) == RESET);

//  spiInOut(ADXL345_SPI, (addr & 0x3f) | 0x80);
  usart_send_string("2");
//  v = spiInOut(ADXL345_SPI, 0);
  usart_send_string("3");
  gpio_set(ADXL345_GPIO, ADXL345_NSS, HIGH);
  return(v);
}
